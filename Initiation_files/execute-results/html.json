{
  "hash": "0cd8598b17a21ec75c4eb293b0c3840e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Initiation\"\nformat: html\n---\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n:::\n\n\n\n\nLast access: 2025-02-21\n\nQuestions:\n\n-   How does the frequency distribution of potential predictors within initiation zones compare to potentially unstable terrain overall?\n\n-   Can initiation-zone geometry be related to topographic indices? For example, is the initiation-zone width or area related to tangential curvature?\n\nUse program LS_poly.\n\n-   Filter the inventory to debris avalanches and debris flows.\n\n-   Using the \"flattenWatermask\" code from the DEM_module, generate center lines for each landslide polygon.\n\n-   Translate center lines to linked nodes.\n\n-   Build a \"closest-node\" raster within each polygon.\n\n-   Get mean, minimum, and maximum values of topographic indices associated with each node.\n\n-   Get average polygon width as area/center-line-length.\n\n-   Delineate an initiation zone with length equal to mean width.\n\nProgram LS_poly generates an output node point shapefile of centerlines. Each node has associated attributes for horizontal distance from the top of the polygon, upslope area, node-associated slope, tangential curvature, and what ever else we might want to examine, e.g., a modeled factor of safety. To delineate the likely (I hope) initiation zone, I took the area associated with nodes within the mean polygon width of the up-slope extent of each polygon. We can look at the distribution of topographic-index values for these initiation zones relative to the rest of the DEM. I'll filter the DEM to include only index values within the range included in the initiation zones.\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nterra 1.8.5\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'terra'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:tidyr':\n\n    extract\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'data.table'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:terra':\n\n    shift\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:lubridate':\n\n    hour, isoweek, mday, minute, month, quarter, second, wday, week,\n    yday, year\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:purrr':\n\n    transpose\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'patchwork'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:terra':\n\n    area\n```\n\n\n:::\n:::\n\n\n\n\nI'll start by looking at some rasters created with makegrids and LS_init. Grad_15.flt is centered-window gradient over a radius of 7.5m (diameter of 15m). Init.flt is a raster mask representing assumed initiation zones generated as described above using LS_init; it has value 1 within the initiation zone and nodata (-9999.) elsewhere.\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\nGet the gradient within the initiation zones.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get the slope within the initiation zones\ninit <- mask*grad_15 # get gradient values within the initiation zones\ngrad_init <- as.data.table(init)\nna.omit(grad_init) # remove nodata rows\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            init\n           <num>\n    1: 2.0276802\n    2: 1.9772296\n    3: 1.8767934\n    4: 1.7534219\n    5: 1.5707017\n   ---          \n56149: 0.6181532\n56150: 0.5843589\n56151: 0.5613263\n56152: 0.5544583\n56153: 0.5748648\n```\n\n\n:::\n:::\n\n\n\n\nThe topography within these zones is determined using post-landslide lidar. Some portion of the zone may include head scarps with steeper gradients than the pre-landslide topography. Likewise, the initiating zone may be a subset of the mapped zone, since the boundary may expand either during or after failure. Given these factors, it seems appropriate to filter out the extreme low and high gradient values. I'll do this using Tukey's fences.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter the slope values to include only those within the range of\n# initiation zones. Note that the lidar post dates almost all the landslides.\n# The extreme gradient values may reflect either post-landslide topography\n# or imprecision in placement of the landslide boundaries. I'll use Tukey's\n# fences to estimate outliers and exclude those values.\nq1 <- quantile(grad_init$init, 0.25)\nq3 <- quantile(grad_init$init, 0.75)\niqr <- IQR(grad_init$init)\nmaxgrad <- q3 + iqr\nmingrad <- q1 - iqr\ngrad_init <- subset(grad_init, grad_init$init <= maxgrad & grad_init$init >= mingrad)\ngrad <- as.data.table(grad_15)\nna.omit(grad) # get rid of all those nodata rows\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                grad_15\n                  <num>\n        1: 0.0016781257\n        2: 0.0014676113\n        3: 0.0008816146\n        4: 0.0009484029\n        5: 0.0025376051\n       ---             \n142287760: 0.0019852403\n142287761: 0.0032839631\n142287762: 0.0049797115\n142287763: 0.0068473923\n142287764: 0.0075887116\n```\n\n\n:::\n\n```{.r .cell-code}\ngradsub <- subset(grad, grad$grad_15 <= maxgrad & grad$grad_15 >= mingrad)\ngrad_all <- as.data.table(gradsub)\n```\n:::\n\n\n\n\nI want to exclude areas where landslides do not initiate from further analyses. I'll create a mask based on the minimum and maximum gradient values identified above using the inter-quartile range. All subsequent candidate predictor rasters will be masked to include only areas within these zones.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a raster mask to include only zones where gradient is within \n# the range observed for the initiation zones\nnodata <- -9999.\nm <- c(0., mingrad, nodata, mingrad, maxgrad, 1.0, maxgrad, 1000., nodata)\nrclmat <- matrix(m, ncol=3, byrow=TRUE) # reclass to 1 and nodata\nslope_mask <- terra::classify(grad_15, rclmat)\nNAflag(slope_mask) <- -9999 # set the nodata value\n```\n:::\n\n\n\n\nI'll generate density plots comparing the entire potential zone - areas within the gradient max-min - to the landslide initiation zones mapped from the Tongass inventory.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_grad15 <- ggplot() + \n  geom_density(data=grad_all, aes(x=grad_15, fill = 'DEM'), alpha=0.5) +\n  geom_density(data=grad_init, aes(x=grad_init$init, fill = 'Landslides'), alpha=0.5) +\n  scale_fill_manual(name = \"\", values = c(DEM = 'blue', Landslides = 'red')) +\n  labs(\n    x = \"Gradient\",\n    y = \"Density\") +\n  theme(legend.position = \"inside\", legend.position.inside = c(0.6, 0.8)) +\n  coord_cartesian(xlim = c(mingrad, maxgrad))\n```\n:::\n\n\n\n\nLet's look at curvatures, using the tangential and normal-profile curvatures.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get the tangential curvature raster \ntan_30 <- terra::rast(\"c:/work/data/wrangell/tan_30.flt\")\nNAflag(tan_30) <- -9999.\n\n# Mask to include only zones within the gradient range of mapped initiation zones\ntan_30 <- tan_30*slope_mask\ntan <- as.data.table(tan_30)\nna.omit(tan)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                tan_30\n                 <num>\n       1: -0.001563733\n       2:  0.039100818\n       3: -0.112947389\n       4:  0.001631375\n       5:  0.070557170\n      ---             \n62095960:  0.008795259\n62095961: -0.001758624\n62095962:  0.001314139\n62095963: -0.021429310\n62095964: -0.020847192\n```\n\n\n:::\n\n```{.r .cell-code}\n# Get the curvature within the initiation zones\ninit <- mask*tan_30\ninit_tan <- as.data.table(init)\nna.omit(init_tan)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                init\n               <num>\n    1: -2.839516e-03\n    2:  6.272380e-04\n    3:  4.820361e-05\n    4:  3.461839e-03\n    5:  6.138285e-03\n   ---              \n50508:  2.781242e-03\n50509:  6.140798e-05\n50510: -4.440819e-03\n50511: -9.268362e-03\n50512: -8.312606e-03\n```\n\n\n:::\n\n```{.r .cell-code}\n# Filter the curvature values to include only those within the range of initiation zone slopes\nmaxtan <- max(init_tan)\nmintan <- min(init_tan)\n\ntansub <- subset(tan, tan$tan_30 <= maxtan & tan$tan_30 >= mintan)\ntan_all <- as.data.table(tansub)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np_tan30 <- ggplot() + \n  geom_density(data=tan_all, aes(x=tan_30, fill = 'DEM'), alpha=0.5) +\n  geom_density(data=init_tan, aes(x=init_tan$init, fill = 'Landslides'), alpha=0.5) +\n  scale_fill_manual(name = \"\", values = c(DEM = 'blue', Landslides = 'red')) +\n  labs(\n    x = \"Tangential Curvature\",\n    y = \"Density\") +\n  theme(legend.position = \"inside\", legend.position.inside = c(0.75, 0.8)) +\n  coord_cartesian(xlim = c(-0.05, 0.05))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get the profile curvature raster \nprof_30 <- terra::rast(\"c:/work/data/wrangell/prof_30.flt\")\nprof_30 <- prof_30*slope_mask\nprof <- as.data.table(prof_30)\n\n# Get the curvature within the initiation zones\ninit <- mask*prof_30\ninit_prof <- as.data.table(init)\nna.omit(init_prof)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n               init\n              <num>\n    1: -0.043680564\n    2: -0.037604161\n    3: -0.043053936\n    4: -0.035328776\n    5: -0.027002966\n   ---             \n50508: -0.001906125\n50509: -0.002322283\n50510: -0.002556668\n50511: -0.001588161\n50512: -0.007253157\n```\n\n\n:::\n\n```{.r .cell-code}\n# Filter the curvature values to include only those within the range of initiation zones\nmaxprof <- max(init_prof)\nminprof <- min(init_prof)\nprofsub <- subset(prof, prof$prof_30 <= maxprof & prof$prof_30 >= minprof)\nprof_all <- as.data.table(profsub)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np_prof30 <- ggplot() + \n  geom_density(data=prof_all, aes(x=prof_30, fill = 'DEM'), alpha=0.5) +\n  geom_density(data=init_prof, aes(x=init_prof$init, fill = 'Landslides'), alpha=0.5) +\n  scale_fill_manual(name = \"\", values = c(DEM = 'blue', Landslides = 'red')) +\n  labs(\n    x = \"Profile Curvature\",\n    y = \"Density\") +\n  theme(legend.position = \"inside\", legend.position.inside = c(0.75, 0.8)) +\n  coord_cartesian(xlim = c(-0.091, 0.1))\n```\n:::\n\n\n\n\nPlots:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_topo <- p_grad15 + p_tan30 + p_prof30\np_topo <- p_topo + plot_annotation(\n  title = 'Wrangell, topographic indices',\n  caption = 'Initiation zones are distinguished by steeper slopes, but not by tangential or profile curvature'\n)\np_topo\n```\n\n::: {.cell-output-display}\n![](Initiation_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\nThe initiation zones appear to lie within generally steeper gradients than the landscape within this zone, but the distribution of curvatures appear the same. What other topographic indices might distinguish initiation zones within the steeper terrain? Let's try partial contributing area, here for 5-hour and 72-hour duration storms.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npca_5 <- terra::rast(\"c:/work/data/wrangell/pca_5.flt\")\npca_5 <- pca_5*slope_mask\npca <- as.data.table(pca_5)\n\ninit <- mask*pca_5\ninit_pca5 <- as.data.table(init)\nna.omit(init_pca5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           init\n          <num>\n    1: 2.093175\n    2: 2.106313\n    3: 2.110173\n    4: 2.124039\n    5: 2.158817\n   ---         \n50508: 2.128179\n50509: 2.126740\n50510: 2.134243\n50511: 2.137588\n50512: 2.110883\n```\n\n\n:::\n\n```{.r .cell-code}\nmaxpca5 <- max(init_pca5)\nminpca5 <- min(init_pca5)\npca5sub <- subset(pca, pca$pca_5 >= minpca5 & pca$pca_5 <= maxpca5)\npca5_all <- as.data.table(pca5sub)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np_pca5 <- ggplot() +\n  geom_density(data=pca5_all, aes(x=pca_5, fill = 'DEM'), alpha = 0.5) +\n  geom_density(data=init_pca5, aes(x=init, fill = 'Landslides'), alpha = 0.5) +\n  scale_fill_manual(name = \"\", values = c(DEM = 'blue', Landslides = 'red')) +\n  labs(\n    x = \"PCA 5-hour storm\",\n    y = \"Density\") +\n  theme(legend.position = \"inside\", legend.position.inside = c(0.75, 0.8)) +\n  coord_cartesian(xlim = c(1., 3.))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npca_72 <- terra::rast(\"c:/work/data/wrangell/pca_72.flt\")\npca_72 <- pca_72*slope_mask\npca <- as.data.table(pca_72)\n\ninit <- mask*pca_72\ninit_pca72 <- as.data.table(init)\nna.omit(init_pca72)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           init\n          <num>\n    1: 14.79326\n    2: 15.04397\n    3: 17.40661\n    4: 17.94919\n    5: 18.56369\n   ---         \n50508: 20.19516\n50509: 20.64870\n50510: 19.89801\n50511: 18.86460\n50512: 19.46936\n```\n\n\n:::\n\n```{.r .cell-code}\nmaxpca72 <- max(init_pca72)\nminpca72 <- min(init_pca72)\npca72sub <- subset(pca, pca$pca_72 >= minpca72 & pca$pca_72 <= maxpca72)\npca72_all <- as.data.table(pca72sub)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np_pca72 <- ggplot() +\n  geom_density(data=pca72_all, aes(x=pca_72, fill = 'DEM'), alpha = 0.5) +\n  geom_density(data=init_pca72, aes(x=init, fill = 'Landslides'), alpha = 0.5) +\n  scale_fill_manual(name = \"\", values = c(DEM = 'blue', Landslides = 'red')) +\n  labs(\n    x = \"PCA 72-hour storm\",\n    y = \"Density\") +\n  theme(legend.position = \"inside\", legend.position.inside = c(0.6, 0.8)) +\n  coord_cartesian(xlim = c(minpca72, 40.))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np_accum <- p_pca5 + p_pca72\np_accum <- p_accum + plot_annotation(\n  title = 'Wrangell, Partial contributing area',\n  caption = 'Initiation zones tend to have larger partial contributing areas'\n)\np_accum\n```\n\n::: {.cell-output-display}\n![](Initiation_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\nThere is some differentiation here, with initiation zones having slightly higher upslope accumulation zones than the terrain in general for both storm durations. \nUsing a simple infinite-slope limit equilibrium model, we can calculate an approximate factor of safety (FoS) that incorporates effects of both slope and partial contributing area. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFoS_5 <- terra::rast(\"c:/work/data/wrangell/fos_pca5.flt\")\nFoS_5 <- FoS_5*slope_mask\nFoS <- as.data.table(FoS_5)\n\ninit <- mask*FoS_5\ninit_FoS5 <- as.data.table(init)\nna.omit(init_FoS5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            init\n           <num>\n    1: 0.2239085\n    2: 0.2437319\n    3: 0.2220742\n    4: 0.2388525\n    5: 0.2584022\n   ---          \n50508: 0.4307395\n50509: 0.4332415\n50510: 0.4341389\n50511: 0.4271371\n50512: 0.4405518\n```\n\n\n:::\n\n```{.r .cell-code}\nmaxFoS5 <- max(init_FoS5)\nminFoS5 <- min(init_FoS5)\nFoS5sub <- subset(FoS, FoS$fos_pca5 >= minFoS5 & FoS$fos_pca5 <= maxFoS5)\nFoS5_all <- as.data.table(FoS5sub)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np_FoS5 <- ggplot() +\n  geom_density(data=FoS5_all, aes(x=fos_pca5, fill = 'DEM'), alpha = 0.5) +\n  geom_density(data=init_FoS5, aes(x=init, fill = 'Landslides'), alpha = 0.5) +\n  scale_fill_manual(name = \"\", values = c(DEM = 'blue', Landslides = 'red')) +\n  labs(\n    x = \"FoS 5-hour storm\",\n    y = \"Density\") +\n  theme(legend.position = \"inside\", legend.position.inside = c(0.6, 0.8))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nFoS_72 <- terra::rast(\"c:/work/data/wrangell/fos_pca72.flt\")\nFoS_72 <- FoS_72*slope_mask\nFoS <- as.data.table(FoS_72)\n\ninit <- mask*FoS_72\ninit_FoS72 <- as.data.table(init)\nna.omit(init_FoS72)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            init\n           <num>\n    1: 0.2083031\n    2: 0.2260092\n    3: 0.1998519\n    4: 0.2139148\n    5: 0.2302645\n   ---          \n50508: 0.3698250\n50509: 0.3695505\n50510: 0.3741286\n50511: 0.3737788\n50512: 0.3811248\n```\n\n\n:::\n\n```{.r .cell-code}\nmaxFoS72 <- max(init_FoS72)\nminFoS72 <- min(init_FoS72)\nFoS72sub <- subset(FoS, FoS$fos_pca72 >= minFoS72 & FoS$fos_pca72 <= maxFoS72)\nFoS72_all <- as.data.table(FoS72sub)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np_FoS72 <- ggplot() +\n  geom_density(data=FoS72_all, aes(x=fos_pca72, fill = 'DEM'), alpha = 0.5) +\n  geom_density(data=init_FoS72, aes(x=init, fill = 'Landslides'), alpha = 0.5) +\n  scale_fill_manual(name = \"\", values = c(DEM = 'blue', Landslides = 'red')) +\n  labs(\n    x = \"FoS 72-hour storm\",\n    y = \"Density\") +\n  theme(legend.position = \"inside\", legend.position.inside = c(0.6, 0.8))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np_FoS <- p_FoS5 + p_FoS72\np_FoS <- p_FoS + plot_annotation(\n  title = 'Wrangell, Factor of Safety',\n  caption = 'Initiation zones appear to be well distinguished using this infinite slope estimate for a factor of safety. This value incorporates effects of both slope and partial contributing area.'\n)\np_FoS\n```\n\n::: {.cell-output-display}\n![](Initiation_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Initiation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}